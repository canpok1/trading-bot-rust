@startuml trading-bot-rust
start

:初期化;

repeat
    :情報取得;

    :DB保存;
    note right
        ・トレンドライン
        ・レジスタンスライン
        ・サポートライン
        ・約定待ちレート
    end note

    if (保有コイン) then (なし)
        :DB保存;
        note right
            ・残高JPY
        end note
    endif

    partition 行動決定 {
        if (未使用コイン) then (一定以上)
            :行動リストに通知を追加;
        elseif (短期トレンド) then (上昇トレンド)
            if (未決済注文レートと現レートの差) then (ナンピン幅以上)
                :行動リストにナンピンを追加;
            elseif (保有期間) then (最大値以上)
                if (未決済注文レートと現レートの差) then (期限切れ時のナンピン幅以上)
                    :行動リストにナンピンを追加;
                endif
            endif
        elseif (未決済注文レートと現レートの差) then (損切り幅以上)
            :行動リストに損切りを追加;
        elseif (売りレート) then (下降中)
            if (未決済注文レート) then (目標レート以上)
                :行動リストに利確を追加;
            endif
        endif

        if (売レートと買レートの差) then (損切り値以上)
        elseif (長期トレンド) then (下降トレンド)
        elseif (未決済注文のレート) then (現レートとの差が一定未満)
        elseif (直近の取引頻度) then (一定以下)
        elseif (短期売り出来高) then (一定以上)
        elseif (目標レートまでの板の厚さ) then (短期売り出来高未満)
        elseif (短期レジスタンスライン) then (ブレイクアウト)
            :行動リストにエントリー追加;
        elseif (短期サポートライン) then (リバウンド)
            :行動リストにエントリー追加;
        endif
    }

    partition 行動 {
        while (未実施の行動がある？) is (yes)
            switch (行動)
            case (エントリー)
                if (残高JPY) then (買い注文可)
                    :成行買い注文;
                    :約定待ち;
                    :指値売り注文;
                endif
            case (損切り)
                :注文キャンセル;
                :キャンセル待ち;
                :成行売り注文;
            case (売り注文)
                :注文キャンセル;
                :キャンセル待ち;
                :指値売り注文;
            case (ナンピン)
                if (残高JPY) then (買い注文可)
                    :成行買い注文;
                    :約定待ち;
                    :注文キャンセル;
                    :キャンセル待ち;
                    :指値売り注文;
                endif
            case (利確)
                :注文キャンセル;
                :キャンセル待ち;
                :成行売り注文;
            case (通知)
                :通知を送信;
            endswitch
        endwhile
    }

    :待機;
repeat while

stop
@enduml